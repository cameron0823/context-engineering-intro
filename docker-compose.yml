version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: treeservice_postgres
    environment:
      POSTGRES_USER: treeservice
      POSTGRES_PASSWORD: password
      POSTGRES_DB: treeservice_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U treeservice -d treeservice_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres_test:
    image: postgres:16-alpine
    container_name: treeservice_postgres_test
    environment:
      POSTGRES_USER: treeservice
      POSTGRES_PASSWORD: password
      POSTGRES_DB: treeservice_test_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U treeservice -d treeservice_test_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: treeservice_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: treeservice_app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://treeservice:password@postgres:5432/treeservice_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./alembic:/app/alembic
      - ./tests:/app/tests
      - ./uploads:/app/uploads
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    profiles:
      - with-app

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: treeservice_celery_worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://treeservice:password@postgres:5432/treeservice_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
    volumes:
      - ./src:/app/src
    command: celery -A src.services.celery_app worker --loglevel=info
    profiles:
      - with-app

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: treeservice_celery_beat
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://treeservice:password@postgres:5432/treeservice_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
    volumes:
      - ./src:/app/src
    command: celery -A src.services.celery_app beat --loglevel=info
    profiles:
      - with-app

  flower:
    image: mher/flower:2.0
    container_name: treeservice_flower
    depends_on:
      - redis
    environment:
      CELERY_BROKER_URL: redis://redis:6379/1
      FLOWER_PORT: 5555
    ports:
      - "5555:5555"
    command: celery flower --broker=redis://redis:6379/1 --port=5555
    profiles:
      - monitoring

volumes:
  postgres_data:
  postgres_test_data:
  redis_data: